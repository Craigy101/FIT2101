<!doctype html>

<html lang="en">
<script>
let new_group = []

function all_data(query){
  let tasks = [
    {
      description: "Graph Theory Assignment",
      unit: "FIT2004",
      due: 2020-11-06
    }
  ]

  let groups =[
    {
      unit_code: 'FIT2004',
      group_id: 'FIT2004-1',
      student_ids: [137753, 416738, 370226, 547965],
      contribution: ['2 Hours', '1 Hour', '1.5 Hours', '2 Hours'],
      submission: 'FIT2004-1_assignment1.pdf',
      marks: ['A', 'C', 'B', 'A'],
      comments: ["Good Attempt", "Getting Better", "Well Done", "Superb", "Well Done"]
    },
    {
      unit_code: 'FIT2004',
      group_id: 'FIT2004-2',
      student_ids: [497263, 271751, 954745, 684444],
      contribution: ['1 Hour', '2 Hours', '2.5 Hours', '2 Hours'],
      submission: 'FIT2004-2_assignment1.pdf',
      marks: null,
      comments: null
    },
    {
      unit_code: 'FIT2004',
      group_id: 'FIT2004-3',
      student_ids: [152598, 154335, 126430, 903357],
      contribution: null,
      submission: null,
      marks: null,
      comments: null,
    }
  ]

  if (query == "tasks"){
    return tasks
  }
  else {
    return groups
  }
}


// Adapted from https://stackoverflow.com/questions/13964155/get-javascript-object-from-array-of-objects-by-value-of-property
function update_task_desciption(data_type, desc) {

  let arr = all_data(data_type);
  let value = desc;
  let task = null;

  for (var i=0, iLen=arr.length; i<iLen; i++) {

    if (arr[i].description == value) {
      task = arr[i];
    }
  }

  document.getElementById("task_description").innerHTML = task.description
  document.getElementById('task_unit').innerHTML = '<b>Unit: </b>' + task.unit + '<br>'
  document.getElementById('task_due').innerHTML = '<b>Due: </b>' + task.due

  create_table(task.unit)
}

function add_to_group(){
  var e = document.getElementById("group_member");
  var idNum = e.value;

  let students = all_data('students');

  {{#each id}}
  id = {{this}}
  if (id == idNum){
    var indexNum = {{@index}}
    new_group.push(['{{lookup ../first_name @index}}', '{{lookup ../last_name @index}}'])
  }
  {{/each}}


  var select = document.getElementById("added_member_table");
  select.innerHTML += '<li class="mdl-list__item">'
  select.innerHTML += '<span class="mdl-list__item-primary-content">' + new_group[new_group.length-1][0] + " " + new_group[new_group.length-1][1] + '</span>'
}

function add_group() {
    // Store in task DB
//  var group_name = document.getElementById("group_name").value;
  //var group_members = document.getElementById("group_member").value;
  var members = []
  var group_name = document.getElementById("group_name").value;
  if (new_group.length==0){
    members.push("NO MEMBERS")
  }
  if (group_name == ""){
    group_name = "NO NAME"
  }
  for(var i=0, stu_len = new_group.length; i<stu_len; i++){
    members.push(" " + new_group[i][0] + " " + new_group[i][1]);
  }
  // Call table refresh
  // Argumemnts are temporary for now to demonstrate funcitonality
refresh_group_table(group_name, members);
new_group = []
var select = document.getElementById("added_member_table");
select.innerHTML = ""


}

function refresh_group_table(group_name, group_members){
    // Args are temporary - remove once you get db connectivity.
    // Once done -- add to page onload to <body> tag

    // Search db for all tasks for that persons' units
  var table = document.getElementById("group_table");
  table.innerHTML += '<tr><td class="mdl-data-table__cell--non-numeric">' + group_name + '</td><td>' + group_members + '</td></tr>'

  // var name_cell = row.insertCell(0);
  // var member_cell = row.insertCell(1);
  //
  // console.log(group_name)
  // console.log(group_members)
  //
  // group_name_cell.style.textAlign = "left";
  // group_name_cell.innerHTML = group_name
  // members_cell.innerHTML = group_members

}

function create_table(unit){
  var table = document.getElementById("task_table");

  let groups = all_data('groups');
  let groups_arr = [];
  let sum_row = null;
  let detail_row = null;
  let group_students = null;

  for (var i=0, iLen=groups.length; i<iLen; i++) {

    if (groups[i].unit_code == unit) {
      groups_arr.push(groups[i]);
    }
  }


  for(var i=0, iLen=groups_arr.length; i<iLen; i++){
    name_output1 = name_output2 = contribution = marks = comments = submission = submitted = graded = '';
    group_students = group_name_search(groups_arr[i]);

    for(var j=0, jLen=group_students.length; j<jLen; j++){
      if (j != 0){
        name_output1 += ', ';
        name_output2 += '<br>';
        contribution += '<br>';
        marks += '<br>';
        comments += '<br>';

      }

      name_output1 += group_students[j].first_name + ' ' + group_students[j].last_name;
      name_output2 += group_students[j].first_name + ' ' + group_students[j].last_name;

      if (!groups_arr[i].contribution && (j == jLen-1)){
        contribution += '<br>';
      }
      else if(!groups_arr[i].contribution){
        contribution += '';
      }
      else {
        contribution += groups_arr[i].contribution[j];
      }

      if (!groups_arr[i].marks){
        marks += '<input type="text" id=' + groups_arr[i].group_id + "_mark_" + j + ' style="text-align: center">';
        graded = 'check_box_outline_blank'
        edit_button = 'value="change"> Confirm Grades </button>'
      }
      else {
        marks += groups_arr[i].marks[j];
        graded = 'check_box'
        edit_button = 'value="edit"> Edit Grades </button>'
      }

      if (!groups_arr[i].comments){
        comments += '<input type="text" id=' + groups_arr[i].group_id + "_comment_" + j + 'style="text-align: left">';
      }
      else {
        comments += groups_arr[i].comments[j];
      }
    }

    if (!groups_arr[i].submission){
      submission = "<i>'No Submission'</i>";
      submitted = 'check_box_outline_blank'
    }
    else {
      submission = '<u>' + groups_arr[i].submission + '</u>';
      submitted = 'check_box'
    }

    table.innerHTML += '<tr onclick="get_table_contents()" id=' + groups_arr[i].group_id + ' value="None"><td class="mdl-data-table__cell--non-numeric" colspan="3">' + name_output1 + '</td><td style="text-align: left">' + groups_arr[i].group_id + '</td><td style="text-align: center"><span class="material-icons">' + submitted + '</span></td><td style="text-align: center"><span class="material-icons">' + graded + '</span></td></tr>'
    table.innerHTML += '<tr style="background-color: silver; visibility: collapse;" class="' + groups_arr[i].group_id + '"><td class="mdl-data-table__cell--non-numeric"><b>Members</b><br>' + name_output2 + '</td><td style="text-align: center"><b>Contribution</b><br>' + contribution + '</td><td style="text-align: center">'+ submission + '</td><td style="text-align: center" id="' + groups_arr[i].group_id + '_grades"><b>Grade</b><br>' + marks + '</td><td style="text-align: left" id="' + groups_arr[i].group_id + '_comments"><b>Comments</b><br>' + comments + '</td><td style="text-align: center"><button onclick="edit_grades(\'' + groups_arr[i].group_id + '\')" id="' + groups_arr[i].group_id + '_edit" ' + edit_button

  }
}

function group_name_search(group_obj) {

  let arr = all_data('students');
  let value = null;
  let group_students = [];

  for (var j=0, jLen=group_obj.student_ids.length; j<jLen; j++) {
    value = group_obj.student_ids[j]

    for (var i=0, iLen=arr.length; i<iLen; i++) {
      if (arr[i].id == value) {
        group_students.push(arr[i]);
      }
    }
  }
  return group_students
}
</script>
<script>
/* Code sourced from https://www.w3schools.com/howto/howto_js_accordion.asp */

var acc = document.getElementsByClassName("accordion");
var i;

for (i = 0; i < acc.length; i++) {
  acc[i].addEventListener("click", function() {
    /* Toggle between adding and removing the "active" class,
    to highlight the button that controls the panel */
    this.classList.toggle("active");

    /* Toggle between hiding and showing the active panel */
    var panel = this.nextElementSibling;
    if (panel.style.display === "block") {
      panel.style.display = "none";
    } else {
      panel.style.display = "block";
    }
  });
}


/* Code sourced from https://www.w3schools.com/howto/howto_js_accordion.asp */
function show_add_task(id) {
  var x = document.getElementById(id);
  if (x.style.display === "none") {
    x.style.display = "block";
  } else {
    x.style.display = "none";
  }
}

function add_task() {
  // Store in task DB
  var task_desc = document.getElementById("task_description").value;
  var unit = document.getElementById("task_unit").value;
  var due_date = document.getElementById("due_date").value;

  // Call table refresh
  // Argumemnts are temporary for now to demonstrate funcitonality
  refresh_task_table(task_desc, unit, due_date);
}


function refresh_task_table(task, unit, due){
  // Args are temporary - remove once you get db connectivity.
  // Once done -- add to page onload to <body> tag

  // Search db for all tasks for that persons' units
  var table = document.getElementById("task_table");
  var row = table.insertRow(1);

  var description_cell = row.insertCell(0);
  var unit_cell = row.insertCell(1);
  var due_cell = row.insertCell(2);

  console.log(task)
  console.log(unit)
  console.log(due)

  description_cell.style.textAlign = "left";
  description_cell.innerHTML = task
  unit_cell.innerHTML = unit
  due_cell.innerHTML = due

}

// code sourced from: https://stackoverflow.com/questions/17979931/obtain-field-td-values-by-clicking-on-table-row
function get_table_contents(){
    document.getElementById('task_table').onclick = function(event){
        event = event || window.event; //for IE8 backward compatibility
        var target = event.target || event.srcElement; //for IE8 backward compatibility
        while (target && target.nodeName != 'TR') {
            target = target.parentElement;
        }
        var cells = target.cells; //cells collection
        if (!cells.length || target.parentNode.nodeName == 'THEAD') { // if clicked row is within thead
            return;
        }
        group_id = cells[1].innerHTML   // Query in db

        table_hide(group_id)
    }
}

// referenced from https://stackoverflow.com/questions/41142925/hide-unhide-table-rows-clicking-on-button/41143167
function table_hide(test) {

    if (document.getElementById(test).value != "Hide " + test) {
        document.getElementById(test).value = "Hide " + test;
        var table= document.getElementById("task_table");
        for (var i = 0, row; row = table.rows[i]; i++) {
          if(row.className == test){row.style.visibility='visible';}
        }
    }
    else{
      document.getElementById(test).value = "Show " + test;
      var table= document.getElementById("task_table");
      for (var i = 0, row; row = table.rows[i]; i++) {
        if(row.className == test){row.style.visibility="collapse";}
      }
  }
}

function confirm_grades(){
  // Stores grade and comments in database and refreshes table
}

function edit_grades(id){
  if (document.getElementById(id + '_edit').value === "edit") {
    document.getElementById(id + '_grades').innerHTML = '<b>Grade</b><br><input type="text" style="text-align: center"><br><input type="text" style="text-align: center"><br><input type="text" style="text-align: center"><br><input type="text" style="text-align: center"><br>'
    document.getElementById(id + '_comments').innerHTML = '<b>Comments</b><br><input type="text" style="text-align: center"><br><input type="text" style="text-align: left"><br><input type="text" style="text-align: left"><br><input type="text" style="text-align: left"><br>'
    document.getElementById(id + '_edit').innerHTML = "Confirm Grade"
    document.getElementById(id + '_edit').value = "change"

  }
  else{
    confirm_grades()
    document.getElementById(id + '_edit').innerHTML = "Edit Grades"
    document.getElementById(id + '_edit').value = "edit"
  }
}

function update_table(unit){
  let tasks = all_data('tasks');
  let tasks_arr = [];
  let desc = '';
  let due = '';
  let table = document.getElementById("task_table");

  for (var i=0, iLen=tasks.length; i<iLen; i++) {

    if (tasks[i].unit == unit) {
      tasks_arr.push(tasks[i]);
    }
  }

  for (var i=0, iLen=tasks_arr.length; i<iLen; i++) {
    desc = tasks_arr[i].description
    due = tasks_arr[i].due

    table.innerHTML += '<tr><td class="mdl-data-table__cell--non-numeric">' + desc + '</td><td>' + unit + '</td><td>' + due + '</td></tr>'
  }
}
</script>
  <head>
    <title>Application Name</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">

    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:regular,bold,italic,thin,light,bolditalic,black,medium&amp;lang=en">
    <link rel="stylesheet" href="https://code.getmdl.io/1.3.0/material.blue_grey-teal.min.css">
    <link rel="stylesheet" href="/UI_styles.css">
  </head>
  <body>
    <div class="demo-layout mdl-layout mdl-js-layout mdl-layout--fixed-drawer mdl-layout--fixed-header">
      <header class="demo-header mdl-layout__header mdl-color--grey-100 mdl-color-text--grey-600">
        <div class="mdl-layout__header-row">
          <span class="mdl-layout-title"> Welcome {{#if name}} {{name}} {{/if}}</span>
          <div class="mdl-layout-spacer"></div>
          <div class="mdl-textfield mdl-js-textfield mdl-textfield--expandable"></div>
          <button class="mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon" id="settingsbtn">
            <i class="material-icons">settings</i>
          </button>
          <ul class="mdl-menu mdl-js-menu mdl-js-ripple-effect mdl-menu--bottom-right" for="settingsbtn">
            <script> function goBack(){
              //function to go back a page (used to go back to the login page)
              window.history.go(-2)
            }
            </script>
            <li class="mdl-menu__item" onclick="goBack()">Log Out</li>
          </ul>
        </div>
      </header>
      <div class="big-div-margins">
        <span class="mdl-layout-title">Groups</span>
      </div>
      <table class="mdl-data-table mdl-js-data-table  mdl-shadow--2dp demo-graphs" id="group_table">
        <thead>
          <tr>
            <th class="mdl-data-table__cell--non-numeric" id="group_name_cell">Group Name</th>
            <th>Members</th>

          </tr>
        </thead>
        <tbody>
          <script>
          var group = [];
          var group_name = "{{groupNames.[0]}}";
          {{#each groupNames}}
          var currentName = "{{this}}"
          if(currentName == group_name){
            var studentName = {{lookup ../groupId @index}}
            console.log(studentName)
            var fullName = findName(studentName)
            group.push(fullName)
            console.log(group)
          }
          else{
            if({{@index}} != {{@last}}){
              var table = document.getElementById("group_table")
              table.innerHTML += '<tr><td class="mdl-data-table__cell--non-numeric">' + group_name + "</td><td>" + group + "</td></tr>"
            }
            group_name = "{{this}}"
            group = []
            var studentName = {{lookup ../groupId @index}}
            var fullName = findName(studentName)
            group.push(fullName)
          }
          {{/each}}
          var table = document.getElementById("group_table")
          table.innerHTML += '<tr><td class="mdl-data-table__cell--non-numeric">' + group_name + "</td><td>" + group + "</td></tr>"

          function findName(studentName){
            {{#each id as |item|}}
            if(studentName == {{item}})
            return '{{lookup ../first_name @index}}' + ' ' + '{{lookup ../last_name @index}}'
            {{/each}}
          }
          </script>
        </tbody>
      </table>
      <div class="big-div-margins">
        <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect" onclick="show_add_task('add_task_form')">
          Create new group
        </button>
      </div>
      <div>
        <table class="border demo-graphs" id="add_task_form" style="display:none;">
          <tr>
            <form action="/auth/pushGroups" method="POST">
            <td class="mdl-data-table__cell--non-numeric td-height"><span class="mdl-layout-title">Group Name</span>
            <input class="mdl-textfield__input" type="text" id="group_name" name="group_name"></td>
          </tr>
          <tr>
            <td class="mdl-data-table__cell--non-numeric"><span class="mdl-layout-title">Member</span>
              <select class="mdl-textfield__input" id="group_member" name="group_member">
                <option value="" selected disabled hidden>Members</option>
                {{#each id}}
                <option value={{this}}>{{this}}</option>
                {{/each}}
              </select>
              <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent" style="float: right;" onclick="add_to_group()">
              Add to group
              </button>
              <!-- Simple list -->
              <style>
              .demo-list-item {
                width: 300px;
              }
            </style>

            <ul class="demo-list-item mdl-list" id="added_member_table">
            </ul>

          </tr>
          </form>
          <tr>
            <td class="mdl-data-table__cell--non-numeric">
              <button type="submit" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent" style="float: right;" onclick="add_group(); show_add_task('add_task_form')">
              Confirm group
              </button></td>
          </tr>
          <script>
          function goBackPage(){
            window.history.back();
          }
          </script>
        </table>
        <!-- Raised button with ripple -->
        <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect" style="float:right" onclick="goBackPage()">
          Back
        </button>
      </div>
        <script src="https://code.getmdl.io/1.3.0/material.min.js"></script>
  </body>
  <script src="/UI_Interactive.js"></script>
</html>
